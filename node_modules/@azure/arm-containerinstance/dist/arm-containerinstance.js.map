{"version":3,"file":"arm-containerinstance.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/containerGroupsMappers.ts","../src/models/parameters.ts","../src/operations/containerGroups.ts","../src/models/operationsMappers.ts","../src/operations/operations.ts","../src/models/locationMappers.ts","../src/operations/location.ts","../src/models/containersMappers.ts","../src/operations/containers.ts","../src/containerInstanceManagementClientContext.ts","../src/containerInstanceManagementClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * The port exposed on the container instance.\n */\nexport interface ContainerPort {\n  /**\n   * The protocol associated with the port. Possible values include: 'TCP', 'UDP'\n   */\n  protocol?: ContainerNetworkProtocol;\n  /**\n   * The port number exposed within the container group.\n   */\n  port: number;\n}\n\n/**\n * The environment variable to set within the container instance.\n */\nexport interface EnvironmentVariable {\n  /**\n   * The name of the environment variable.\n   */\n  name: string;\n  /**\n   * The value of the environment variable.\n   */\n  value?: string;\n  /**\n   * The value of the secure environment variable.\n   */\n  secureValue?: string;\n}\n\n/**\n * The container instance state.\n */\nexport interface ContainerState {\n  /**\n   * The state of the container instance.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: string;\n  /**\n   * The date-time when the container instance state started.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startTime?: Date;\n  /**\n   * The container instance exit codes correspond to those from the `docker run` command.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exitCode?: number;\n  /**\n   * The date-time when the container instance state finished.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly finishTime?: Date;\n  /**\n   * The human-readable status of the container instance state.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly detailStatus?: string;\n}\n\n/**\n * A container group or container instance event.\n */\nexport interface Event {\n  /**\n   * The count of the event.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly count?: number;\n  /**\n   * The date-time of the earliest logged event.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly firstTimestamp?: Date;\n  /**\n   * The date-time of the latest logged event.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastTimestamp?: Date;\n  /**\n   * The event name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The event message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * The event type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n}\n\n/**\n * The instance view of the container instance. Only valid in response.\n */\nexport interface ContainerPropertiesInstanceView {\n  /**\n   * The number of times that the container instance has been restarted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly restartCount?: number;\n  /**\n   * Current container instance state.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly currentState?: ContainerState;\n  /**\n   * Previous container instance state.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly previousState?: ContainerState;\n  /**\n   * The events of the container instance.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly events?: Event[];\n}\n\n/**\n * The GPU resource.\n */\nexport interface GpuResource {\n  /**\n   * The count of the GPU resource.\n   */\n  count: number;\n  /**\n   * The SKU of the GPU resource. Possible values include: 'K80', 'P100', 'V100'\n   */\n  sku: GpuSku;\n}\n\n/**\n * The resource requests.\n */\nexport interface ResourceRequests {\n  /**\n   * The memory request in GB of this container instance.\n   */\n  memoryInGB: number;\n  /**\n   * The CPU request of this container instance.\n   */\n  cpu: number;\n  /**\n   * The GPU request of this container instance.\n   */\n  gpu?: GpuResource;\n}\n\n/**\n * The resource limits.\n */\nexport interface ResourceLimits {\n  /**\n   * The memory limit in GB of this container instance.\n   */\n  memoryInGB?: number;\n  /**\n   * The CPU limit of this container instance.\n   */\n  cpu?: number;\n  /**\n   * The GPU limit of this container instance.\n   */\n  gpu?: GpuResource;\n}\n\n/**\n * The resource requirements.\n */\nexport interface ResourceRequirements {\n  /**\n   * The resource requests of this container instance.\n   */\n  requests: ResourceRequests;\n  /**\n   * The resource limits of this container instance.\n   */\n  limits?: ResourceLimits;\n}\n\n/**\n * The properties of the volume mount.\n */\nexport interface VolumeMount {\n  /**\n   * The name of the volume mount.\n   */\n  name: string;\n  /**\n   * The path within the container where the volume should be mounted. Must not contain colon (:).\n   */\n  mountPath: string;\n  /**\n   * The flag indicating whether the volume mount is read-only.\n   */\n  readOnly?: boolean;\n}\n\n/**\n * The container execution command, for liveness or readiness probe\n */\nexport interface ContainerExec {\n  /**\n   * The commands to execute within the container.\n   */\n  command?: string[];\n}\n\n/**\n * The HTTP header.\n */\nexport interface HttpHeader {\n  /**\n   * The header name.\n   */\n  name?: string;\n  /**\n   * The header value.\n   */\n  value?: string;\n}\n\n/**\n * The container Http Get settings, for liveness or readiness probe\n */\nexport interface ContainerHttpGet {\n  /**\n   * The path to probe.\n   */\n  path?: string;\n  /**\n   * The port number to probe.\n   */\n  port: number;\n  /**\n   * The scheme. Possible values include: 'http', 'https'\n   */\n  scheme?: Scheme;\n  /**\n   * The HTTP headers.\n   */\n  httpHeaders?: HttpHeader[];\n}\n\n/**\n * The container probe, for liveness or readiness\n */\nexport interface ContainerProbe {\n  /**\n   * The execution command to probe\n   */\n  exec?: ContainerExec;\n  /**\n   * The Http Get settings to probe\n   */\n  httpGet?: ContainerHttpGet;\n  /**\n   * The initial delay seconds.\n   */\n  initialDelaySeconds?: number;\n  /**\n   * The period seconds.\n   */\n  periodSeconds?: number;\n  /**\n   * The failure threshold.\n   */\n  failureThreshold?: number;\n  /**\n   * The success threshold.\n   */\n  successThreshold?: number;\n  /**\n   * The timeout seconds.\n   */\n  timeoutSeconds?: number;\n}\n\n/**\n * A container instance.\n */\nexport interface Container {\n  /**\n   * The user-provided name of the container instance.\n   */\n  name: string;\n  /**\n   * The name of the image used to create the container instance.\n   */\n  image: string;\n  /**\n   * The commands to execute within the container instance in exec form.\n   */\n  command?: string[];\n  /**\n   * The exposed ports on the container instance.\n   */\n  ports?: ContainerPort[];\n  /**\n   * The environment variables to set in the container instance.\n   */\n  environmentVariables?: EnvironmentVariable[];\n  /**\n   * The instance view of the container instance. Only valid in response.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly instanceView?: ContainerPropertiesInstanceView;\n  /**\n   * The resource requirements of the container instance.\n   */\n  resources: ResourceRequirements;\n  /**\n   * The volume mounts available to the container instance.\n   */\n  volumeMounts?: VolumeMount[];\n  /**\n   * The liveness probe.\n   */\n  livenessProbe?: ContainerProbe;\n  /**\n   * The readiness probe.\n   */\n  readinessProbe?: ContainerProbe;\n}\n\n/**\n * The properties of the Azure File volume. Azure File shares are mounted as volumes.\n */\nexport interface AzureFileVolume {\n  /**\n   * The name of the Azure File share to be mounted as a volume.\n   */\n  shareName: string;\n  /**\n   * The flag indicating whether the Azure File shared mounted as a volume is read-only.\n   */\n  readOnly?: boolean;\n  /**\n   * The name of the storage account that contains the Azure File share.\n   */\n  storageAccountName: string;\n  /**\n   * The storage account access key used to access the Azure File share.\n   */\n  storageAccountKey?: string;\n}\n\n/**\n * Represents a volume that is populated with the contents of a git repository\n */\nexport interface GitRepoVolume {\n  /**\n   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume\n   * directory will be the git repository.  Otherwise, if specified, the volume will contain the\n   * git repository in the subdirectory with the given name.\n   */\n  directory?: string;\n  /**\n   * Repository URL\n   */\n  repository: string;\n  /**\n   * Commit hash for the specified revision.\n   */\n  revision?: string;\n}\n\n/**\n * The properties of the volume.\n */\nexport interface Volume {\n  /**\n   * The name of the volume.\n   */\n  name: string;\n  /**\n   * The Azure File volume.\n   */\n  azureFile?: AzureFileVolume;\n  /**\n   * The empty directory volume.\n   */\n  emptyDir?: any;\n  /**\n   * The secret volume.\n   */\n  secret?: { [propertyName: string]: string };\n  /**\n   * The git repo volume.\n   */\n  gitRepo?: GitRepoVolume;\n}\n\n/**\n * An interface representing ContainerGroupIdentityUserAssignedIdentitiesValue.\n */\nexport interface ContainerGroupIdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly clientId?: string;\n}\n\n/**\n * Identity for the container group.\n */\nexport interface ContainerGroupIdentity {\n  /**\n   * The principal id of the container group identity. This property will only be provided for a\n   * system assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant id associated with the container group. This property will only be provided for a\n   * system assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tenantId?: string;\n  /**\n   * The type of identity used for the container group. The type 'SystemAssigned, UserAssigned'\n   * includes both an implicitly created identity and a set of user assigned identities. The type\n   * 'None' will remove any identities from the container group. Possible values include:\n   * 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'\n   */\n  type?: ResourceIdentityType;\n  /**\n   * The list of user identities associated with the container group. The user identity dictionary\n   * key references will be ARM resource ids in the form:\n   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n   */\n  userAssignedIdentities?: { [propertyName: string]: ContainerGroupIdentityUserAssignedIdentitiesValue };\n}\n\n/**\n * Image registry credential.\n */\nexport interface ImageRegistryCredential {\n  /**\n   * The Docker image registry server without a protocol such as \"http\" and \"https\".\n   */\n  server: string;\n  /**\n   * The username for the private registry.\n   */\n  username: string;\n  /**\n   * The password for the private registry.\n   */\n  password?: string;\n  /**\n   * The identity for the private registry.\n   */\n  identity?: string;\n  /**\n   * The identity URL for the private registry.\n   */\n  identityUrl?: string;\n}\n\n/**\n * The port exposed on the container group.\n */\nexport interface Port {\n  /**\n   * The protocol associated with the port. Possible values include: 'TCP', 'UDP'\n   */\n  protocol?: ContainerGroupNetworkProtocol;\n  /**\n   * The port number.\n   */\n  port: number;\n}\n\n/**\n * IP address for the container group.\n */\nexport interface IpAddress {\n  /**\n   * The list of ports exposed on the container group.\n   */\n  ports: Port[];\n  /**\n   * Specifies if the IP is exposed to the public internet or private VNET. Possible values\n   * include: 'Public', 'Private'\n   */\n  type: ContainerGroupIpAddressType;\n  /**\n   * The IP exposed to the public internet.\n   */\n  ip?: string;\n  /**\n   * The Dns name label for the IP.\n   */\n  dnsNameLabel?: string;\n  /**\n   * The FQDN for the IP.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fqdn?: string;\n}\n\n/**\n * The instance view of the container group. Only valid in response.\n */\nexport interface ContainerGroupPropertiesInstanceView {\n  /**\n   * The events of this container group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly events?: Event[];\n  /**\n   * The state of the container group. Only valid in response.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: string;\n}\n\n/**\n * Container group log analytics information.\n */\nexport interface LogAnalytics {\n  /**\n   * The workspace id for log analytics\n   */\n  workspaceId: string;\n  /**\n   * The workspace key for log analytics\n   */\n  workspaceKey: string;\n  /**\n   * The log type to be used. Possible values include: 'ContainerInsights', 'ContainerInstanceLogs'\n   */\n  logType?: LogAnalyticsLogType;\n  /**\n   * Metadata for log analytics.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The workspace resource id for log analytics\n   */\n  workspaceResourceId?: string;\n}\n\n/**\n * Container group diagnostic information.\n */\nexport interface ContainerGroupDiagnostics {\n  /**\n   * Container group log analytics information.\n   */\n  logAnalytics?: LogAnalytics;\n}\n\n/**\n * Container group subnet information.\n */\nexport interface ContainerGroupSubnetId {\n  /**\n   * Resource ID of virtual network and subnet.\n   */\n  id: string;\n  /**\n   * Friendly name for the subnet.\n   */\n  name?: string;\n}\n\n/**\n * DNS configuration for the container group.\n */\nexport interface DnsConfiguration {\n  /**\n   * The DNS servers for the container group.\n   */\n  nameServers: string[];\n  /**\n   * The DNS search domains for hostname lookup in the container group.\n   */\n  searchDomains?: string;\n  /**\n   * The DNS options for the container group.\n   */\n  options?: string;\n}\n\n/**\n * The container group encryption properties.\n */\nexport interface EncryptionProperties {\n  /**\n   * The keyvault base url.\n   */\n  vaultBaseUrl: string;\n  /**\n   * The encryption key name.\n   */\n  keyName: string;\n  /**\n   * The encryption key version.\n   */\n  keyVersion: string;\n}\n\n/**\n * The instance view of the init container. Only valid in response.\n */\nexport interface InitContainerPropertiesDefinitionInstanceView {\n  /**\n   * The number of times that the init container has been restarted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly restartCount?: number;\n  /**\n   * The current state of the init container.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly currentState?: ContainerState;\n  /**\n   * The previous state of the init container.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly previousState?: ContainerState;\n  /**\n   * The events of the init container.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly events?: Event[];\n}\n\n/**\n * The init container definition.\n */\nexport interface InitContainerDefinition {\n  /**\n   * The name for the init container.\n   */\n  name: string;\n  /**\n   * The image of the init container.\n   */\n  image?: string;\n  /**\n   * The command to execute within the init container in exec form.\n   */\n  command?: string[];\n  /**\n   * The environment variables to set in the init container.\n   */\n  environmentVariables?: EnvironmentVariable[];\n  /**\n   * The instance view of the init container. Only valid in response.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly instanceView?: InitContainerPropertiesDefinitionInstanceView;\n  /**\n   * The volume mounts available to the init container.\n   */\n  volumeMounts?: VolumeMount[];\n}\n\n/**\n * The Resource model definition.\n */\nexport interface Resource extends BaseResource {\n  /**\n   * The resource id.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * The resource location.\n   */\n  location?: string;\n  /**\n   * The resource tags.\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * The zones for the container group.\n   */\n  zones?: string[];\n}\n\n/**\n * A container group.\n */\nexport interface ContainerGroup extends Resource {\n  /**\n   * The identity of the container group, if configured.\n   */\n  identity?: ContainerGroupIdentity;\n  /**\n   * The provisioning state of the container group. This only appears in the response.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The containers within the container group.\n   */\n  containers: Container[];\n  /**\n   * The image registry credentials by which the container group is created from.\n   */\n  imageRegistryCredentials?: ImageRegistryCredential[];\n  /**\n   * Restart policy for all containers within the container group.\n   * - `Always` Always restart\n   * - `OnFailure` Restart on failure\n   * - `Never` Never restart\n   * . Possible values include: 'Always', 'OnFailure', 'Never'\n   */\n  restartPolicy?: ContainerGroupRestartPolicy;\n  /**\n   * The IP address type of the container group.\n   */\n  ipAddress?: IpAddress;\n  /**\n   * The operating system type required by the containers in the container group. Possible values\n   * include: 'Windows', 'Linux'\n   */\n  osType: OperatingSystemTypes;\n  /**\n   * The list of volumes that can be mounted by containers in this container group.\n   */\n  volumes?: Volume[];\n  /**\n   * The instance view of the container group. Only valid in response.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly instanceView?: ContainerGroupPropertiesInstanceView;\n  /**\n   * The diagnostic information for a container group.\n   */\n  diagnostics?: ContainerGroupDiagnostics;\n  /**\n   * The subnet resource IDs for a container group.\n   */\n  subnetIds?: ContainerGroupSubnetId[];\n  /**\n   * The DNS config information for a container group.\n   */\n  dnsConfig?: DnsConfiguration;\n  /**\n   * The SKU for a container group. Possible values include: 'Standard', 'Dedicated'\n   */\n  sku?: ContainerGroupSku;\n  /**\n   * The encryption properties for a container group.\n   */\n  encryptionProperties?: EncryptionProperties;\n  /**\n   * The init containers for a container group.\n   */\n  initContainers?: InitContainerDefinition[];\n}\n\n/**\n * The display information of the operation.\n */\nexport interface OperationDisplay {\n  /**\n   * The name of the provider of the operation.\n   */\n  provider?: string;\n  /**\n   * The name of the resource type of the operation.\n   */\n  resource?: string;\n  /**\n   * The friendly name of the operation.\n   */\n  operation?: string;\n  /**\n   * The description of the operation.\n   */\n  description?: string;\n}\n\n/**\n * An operation for Azure Container Instance service.\n */\nexport interface Operation {\n  /**\n   * The name of the operation.\n   */\n  name: string;\n  /**\n   * The display information of the operation.\n   */\n  display: OperationDisplay;\n  /**\n   * The additional properties.\n   */\n  properties?: any;\n  /**\n   * The intended executor of the operation. Possible values include: 'User', 'System'\n   */\n  origin?: ContainerInstanceOperationsOrigin;\n}\n\n/**\n * The name object of the resource\n */\nexport interface UsageName {\n  /**\n   * The name of the resource\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n  /**\n   * The localized name of the resource\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly localizedValue?: string;\n}\n\n/**\n * A single usage result\n */\nexport interface Usage {\n  /**\n   * Unit of the usage result\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly unit?: string;\n  /**\n   * The current usage of the resource\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly currentValue?: number;\n  /**\n   * The maximum permitted usage of the resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly limit?: number;\n  /**\n   * The name object of the resource\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: UsageName;\n}\n\n/**\n * The logs.\n */\nexport interface Logs {\n  /**\n   * The content of the log.\n   */\n  content?: string;\n}\n\n/**\n * The size of the terminal.\n */\nexport interface ContainerExecRequestTerminalSize {\n  /**\n   * The row size of the terminal\n   */\n  rows?: number;\n  /**\n   * The column size of the terminal\n   */\n  cols?: number;\n}\n\n/**\n * The container exec request.\n */\nexport interface ContainerExecRequest {\n  /**\n   * The command to be executed.\n   */\n  command?: string;\n  /**\n   * The size of the terminal.\n   */\n  terminalSize?: ContainerExecRequestTerminalSize;\n}\n\n/**\n * The information for the container exec command.\n */\nexport interface ContainerExecResponse {\n  /**\n   * The uri for the exec websocket.\n   */\n  webSocketUri?: string;\n  /**\n   * The password to start the exec command.\n   */\n  password?: string;\n}\n\n/**\n * The information for the output stream from container attach.\n */\nexport interface ContainerAttachResponse {\n  /**\n   * The uri for the output stream from the attach.\n   */\n  webSocketUri?: string;\n  /**\n   * The password to the output stream from the attach. Send as an Authorization header value when\n   * connecting to the websocketUri.\n   */\n  password?: string;\n}\n\n/**\n * The cached image and OS type.\n */\nexport interface CachedImages {\n  /**\n   * The OS type of the cached image.\n   */\n  osType: string;\n  /**\n   * The cached image name.\n   */\n  image: string;\n}\n\n/**\n * The supported capabilities.\n */\nexport interface CapabilitiesCapabilities {\n  /**\n   * The maximum allowed memory request in GB.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly maxMemoryInGB?: number;\n  /**\n   * The maximum allowed CPU request in cores.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly maxCpu?: number;\n  /**\n   * The maximum allowed GPU count.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly maxGpuCount?: number;\n}\n\n/**\n * The regional capabilities.\n */\nexport interface Capabilities {\n  /**\n   * The resource type that this capability describes.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resourceType?: string;\n  /**\n   * The OS type that this capability describes.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly osType?: string;\n  /**\n   * The resource location.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly location?: string;\n  /**\n   * The ip address type that this capability describes.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly ipAddressType?: string;\n  /**\n   * The GPU sku that this capability describes.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly gpu?: string;\n  /**\n   * The supported capabilities.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly capabilities?: CapabilitiesCapabilities;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainersListLogsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of lines to show from the tail of the container instance log. If not provided, all\n   * available logs are shown up to 4mb.\n   */\n  tail?: number;\n  /**\n   * If true, adds a timestamp at the beginning of every line of log output. If not provided,\n   * defaults to false.\n   */\n  timestamps?: boolean;\n}\n\n/**\n * An interface representing ContainerInstanceManagementClientOptions.\n */\nexport interface ContainerInstanceManagementClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * The container group list response that contains the container group properties.\n * @extends Array<ContainerGroup>\n */\nexport interface ContainerGroupListResult extends Array<ContainerGroup> {\n  /**\n   * The URI to fetch the next page of container groups.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * The operation list response that contains all operations for Azure Container Instance service.\n * @extends Array<Operation>\n */\nexport interface OperationListResult extends Array<Operation> {\n  /**\n   * The URI to fetch the next page of operations.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * The response containing the usage data\n * @extends Array<Usage>\n */\nexport interface UsageListResult extends Array<Usage> {\n}\n\n/**\n * @interface\n * The response containing cached images.\n * @extends Array<CachedImages>\n */\nexport interface CachedImagesListResult extends Array<CachedImages> {\n  /**\n   * The URI to fetch the next page of cached images.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * The response containing list of capabilities.\n * @extends Array<Capabilities>\n */\nexport interface CapabilitiesListResult extends Array<Capabilities> {\n  /**\n   * The URI to fetch the next page of capabilities.\n   */\n  nextLink?: string;\n}\n\n/**\n * Defines values for ContainerNetworkProtocol.\n * Possible values include: 'TCP', 'UDP'\n * @readonly\n * @enum {string}\n */\nexport type ContainerNetworkProtocol = 'TCP' | 'UDP';\n\n/**\n * Defines values for GpuSku.\n * Possible values include: 'K80', 'P100', 'V100'\n * @readonly\n * @enum {string}\n */\nexport type GpuSku = 'K80' | 'P100' | 'V100';\n\n/**\n * Defines values for Scheme.\n * Possible values include: 'http', 'https'\n * @readonly\n * @enum {string}\n */\nexport type Scheme = 'http' | 'https';\n\n/**\n * Defines values for ResourceIdentityType.\n * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',\n * 'None'\n * @readonly\n * @enum {string}\n */\nexport type ResourceIdentityType = 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned' | 'None';\n\n/**\n * Defines values for ContainerGroupRestartPolicy.\n * Possible values include: 'Always', 'OnFailure', 'Never'\n * @readonly\n * @enum {string}\n */\nexport type ContainerGroupRestartPolicy = 'Always' | 'OnFailure' | 'Never';\n\n/**\n * Defines values for ContainerGroupNetworkProtocol.\n * Possible values include: 'TCP', 'UDP'\n * @readonly\n * @enum {string}\n */\nexport type ContainerGroupNetworkProtocol = 'TCP' | 'UDP';\n\n/**\n * Defines values for ContainerGroupIpAddressType.\n * Possible values include: 'Public', 'Private'\n * @readonly\n * @enum {string}\n */\nexport type ContainerGroupIpAddressType = 'Public' | 'Private';\n\n/**\n * Defines values for OperatingSystemTypes.\n * Possible values include: 'Windows', 'Linux'\n * @readonly\n * @enum {string}\n */\nexport type OperatingSystemTypes = 'Windows' | 'Linux';\n\n/**\n * Defines values for LogAnalyticsLogType.\n * Possible values include: 'ContainerInsights', 'ContainerInstanceLogs'\n * @readonly\n * @enum {string}\n */\nexport type LogAnalyticsLogType = 'ContainerInsights' | 'ContainerInstanceLogs';\n\n/**\n * Defines values for ContainerGroupSku.\n * Possible values include: 'Standard', 'Dedicated'\n * @readonly\n * @enum {string}\n */\nexport type ContainerGroupSku = 'Standard' | 'Dedicated';\n\n/**\n * Defines values for ContainerInstanceOperationsOrigin.\n * Possible values include: 'User', 'System'\n * @readonly\n * @enum {string}\n */\nexport type ContainerInstanceOperationsOrigin = 'User' | 'System';\n\n/**\n * Contains response data for the list operation.\n */\nexport type ContainerGroupsListResponse = ContainerGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroupListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type ContainerGroupsListByResourceGroupResponse = ContainerGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroupListResult;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ContainerGroupsGetResponse = ContainerGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroup;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ContainerGroupsCreateOrUpdateResponse = ContainerGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroup;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ContainerGroupsUpdateResponse = ContainerGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroup;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type ContainerGroupsDeleteMethodResponse = ContainerGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroup;\n    };\n};\n\n/**\n * Contains response data for the getOutboundNetworkDependenciesEndpoints operation.\n */\nexport type ContainerGroupsGetOutboundNetworkDependenciesEndpointsResponse = Array<string> & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string[];\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type ContainerGroupsBeginCreateOrUpdateResponse = ContainerGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroup;\n    };\n};\n\n/**\n * Contains response data for the beginDeleteMethod operation.\n */\nexport type ContainerGroupsBeginDeleteMethodResponse = ContainerGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroup;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ContainerGroupsListNextResponse = ContainerGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroupListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type ContainerGroupsListByResourceGroupNextResponse = ContainerGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerGroupListResult;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type OperationsListNextResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n\n/**\n * Contains response data for the listUsage operation.\n */\nexport type LocationListUsageResponse = UsageListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: UsageListResult;\n    };\n};\n\n/**\n * Contains response data for the listCachedImages operation.\n */\nexport type LocationListCachedImagesResponse = CachedImagesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CachedImagesListResult;\n    };\n};\n\n/**\n * Contains response data for the listCapabilities operation.\n */\nexport type LocationListCapabilitiesResponse = CapabilitiesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CapabilitiesListResult;\n    };\n};\n\n/**\n * Contains response data for the listCachedImagesNext operation.\n */\nexport type LocationListCachedImagesNextResponse = CachedImagesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CachedImagesListResult;\n    };\n};\n\n/**\n * Contains response data for the listCapabilitiesNext operation.\n */\nexport type LocationListCapabilitiesNextResponse = CapabilitiesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CapabilitiesListResult;\n    };\n};\n\n/**\n * Contains response data for the listLogs operation.\n */\nexport type ContainersListLogsResponse = Logs & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Logs;\n    };\n};\n\n/**\n * Contains response data for the executeCommand operation.\n */\nexport type ContainersExecuteCommandResponse = ContainerExecResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerExecResponse;\n    };\n};\n\n/**\n * Contains response data for the attach operation.\n */\nexport type ContainersAttachResponse = ContainerAttachResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ContainerAttachResponse;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const ContainerPort: msRest.CompositeMapper = {\n  serializedName: \"ContainerPort\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerPort\",\n    modelProperties: {\n      protocol: {\n        serializedName: \"protocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        required: true,\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentVariable: msRest.CompositeMapper = {\n  serializedName: \"EnvironmentVariable\",\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentVariable\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secureValue: {\n        serializedName: \"secureValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerState: msRest.CompositeMapper = {\n  serializedName: \"ContainerState\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerState\",\n    modelProperties: {\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        readOnly: true,\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      exitCode: {\n        readOnly: true,\n        serializedName: \"exitCode\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      finishTime: {\n        readOnly: true,\n        serializedName: \"finishTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      detailStatus: {\n        readOnly: true,\n        serializedName: \"detailStatus\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Event: msRest.CompositeMapper = {\n  serializedName: \"Event\",\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      count: {\n        readOnly: true,\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      firstTimestamp: {\n        readOnly: true,\n        serializedName: \"firstTimestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastTimestamp: {\n        readOnly: true,\n        serializedName: \"lastTimestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerPropertiesInstanceView: msRest.CompositeMapper = {\n  serializedName: \"ContainerProperties_instanceView\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerPropertiesInstanceView\",\n    modelProperties: {\n      restartCount: {\n        readOnly: true,\n        serializedName: \"restartCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currentState: {\n        readOnly: true,\n        serializedName: \"currentState\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerState\"\n        }\n      },\n      previousState: {\n        readOnly: true,\n        serializedName: \"previousState\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerState\"\n        }\n      },\n      events: {\n        readOnly: true,\n        serializedName: \"events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GpuResource: msRest.CompositeMapper = {\n  serializedName: \"GpuResource\",\n  type: {\n    name: \"Composite\",\n    className: \"GpuResource\",\n    modelProperties: {\n      count: {\n        required: true,\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sku: {\n        required: true,\n        serializedName: \"sku\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceRequests: msRest.CompositeMapper = {\n  serializedName: \"ResourceRequests\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceRequests\",\n    modelProperties: {\n      memoryInGB: {\n        required: true,\n        serializedName: \"memoryInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpu: {\n        required: true,\n        serializedName: \"cpu\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      gpu: {\n        serializedName: \"gpu\",\n        type: {\n          name: \"Composite\",\n          className: \"GpuResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceLimits: msRest.CompositeMapper = {\n  serializedName: \"ResourceLimits\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceLimits\",\n    modelProperties: {\n      memoryInGB: {\n        serializedName: \"memoryInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpu: {\n        serializedName: \"cpu\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      gpu: {\n        serializedName: \"gpu\",\n        type: {\n          name: \"Composite\",\n          className: \"GpuResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceRequirements: msRest.CompositeMapper = {\n  serializedName: \"ResourceRequirements\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceRequirements\",\n    modelProperties: {\n      requests: {\n        required: true,\n        serializedName: \"requests\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceRequests\"\n        }\n      },\n      limits: {\n        serializedName: \"limits\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceLimits\"\n        }\n      }\n    }\n  }\n};\n\nexport const VolumeMount: msRest.CompositeMapper = {\n  serializedName: \"VolumeMount\",\n  type: {\n    name: \"Composite\",\n    className: \"VolumeMount\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mountPath: {\n        required: true,\n        serializedName: \"mountPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      readOnly: {\n        serializedName: \"readOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerExec: msRest.CompositeMapper = {\n  serializedName: \"ContainerExec\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerExec\",\n    modelProperties: {\n      command: {\n        serializedName: \"command\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HttpHeader: msRest.CompositeMapper = {\n  serializedName: \"HttpHeader\",\n  type: {\n    name: \"Composite\",\n    className: \"HttpHeader\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerHttpGet: msRest.CompositeMapper = {\n  serializedName: \"ContainerHttpGet\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerHttpGet\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        required: true,\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scheme: {\n        serializedName: \"scheme\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpHeaders: {\n        serializedName: \"httpHeaders\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HttpHeader\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerProbe: msRest.CompositeMapper = {\n  serializedName: \"ContainerProbe\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProbe\",\n    modelProperties: {\n      exec: {\n        serializedName: \"exec\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerExec\"\n        }\n      },\n      httpGet: {\n        serializedName: \"httpGet\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerHttpGet\"\n        }\n      },\n      initialDelaySeconds: {\n        serializedName: \"initialDelaySeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      periodSeconds: {\n        serializedName: \"periodSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      failureThreshold: {\n        serializedName: \"failureThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      successThreshold: {\n        serializedName: \"successThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeoutSeconds: {\n        serializedName: \"timeoutSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Container: msRest.CompositeMapper = {\n  serializedName: \"Container\",\n  type: {\n    name: \"Composite\",\n    className: \"Container\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        required: true,\n        serializedName: \"properties.image\",\n        type: {\n          name: \"String\"\n        }\n      },\n      command: {\n        serializedName: \"properties.command\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      ports: {\n        serializedName: \"properties.ports\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerPort\"\n            }\n          }\n        }\n      },\n      environmentVariables: {\n        serializedName: \"properties.environmentVariables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnvironmentVariable\"\n            }\n          }\n        }\n      },\n      instanceView: {\n        readOnly: true,\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerPropertiesInstanceView\"\n        }\n      },\n      resources: {\n        required: true,\n        serializedName: \"properties.resources\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceRequirements\"\n        }\n      },\n      volumeMounts: {\n        serializedName: \"properties.volumeMounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VolumeMount\"\n            }\n          }\n        }\n      },\n      livenessProbe: {\n        serializedName: \"properties.livenessProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProbe\"\n        }\n      },\n      readinessProbe: {\n        serializedName: \"properties.readinessProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProbe\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureFileVolume: msRest.CompositeMapper = {\n  serializedName: \"AzureFileVolume\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureFileVolume\",\n    modelProperties: {\n      shareName: {\n        required: true,\n        serializedName: \"shareName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      readOnly: {\n        serializedName: \"readOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageAccountName: {\n        required: true,\n        serializedName: \"storageAccountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountKey: {\n        serializedName: \"storageAccountKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GitRepoVolume: msRest.CompositeMapper = {\n  serializedName: \"GitRepoVolume\",\n  type: {\n    name: \"Composite\",\n    className: \"GitRepoVolume\",\n    modelProperties: {\n      directory: {\n        serializedName: \"directory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      repository: {\n        required: true,\n        serializedName: \"repository\",\n        type: {\n          name: \"String\"\n        }\n      },\n      revision: {\n        serializedName: \"revision\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Volume: msRest.CompositeMapper = {\n  serializedName: \"Volume\",\n  type: {\n    name: \"Composite\",\n    className: \"Volume\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      azureFile: {\n        serializedName: \"azureFile\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureFileVolume\"\n        }\n      },\n      emptyDir: {\n        serializedName: \"emptyDir\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      secret: {\n        serializedName: \"secret\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      gitRepo: {\n        serializedName: \"gitRepo\",\n        type: {\n          name: \"Composite\",\n          className: \"GitRepoVolume\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGroupIdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {\n  serializedName: \"ContainerGroupIdentity_userAssignedIdentitiesValue\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGroupIdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        readOnly: true,\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        readOnly: true,\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGroupIdentity: msRest.CompositeMapper = {\n  serializedName: \"ContainerGroupIdentity\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGroupIdentity\",\n    modelProperties: {\n      principalId: {\n        readOnly: true,\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        readOnly: true,\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerGroupIdentityUserAssignedIdentitiesValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageRegistryCredential: msRest.CompositeMapper = {\n  serializedName: \"ImageRegistryCredential\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageRegistryCredential\",\n    modelProperties: {\n      server: {\n        required: true,\n        serializedName: \"server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      username: {\n        required: true,\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identityUrl: {\n        serializedName: \"identityUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Port: msRest.CompositeMapper = {\n  serializedName: \"Port\",\n  type: {\n    name: \"Composite\",\n    className: \"Port\",\n    modelProperties: {\n      protocol: {\n        serializedName: \"protocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        required: true,\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IpAddress: msRest.CompositeMapper = {\n  serializedName: \"IpAddress\",\n  type: {\n    name: \"Composite\",\n    className: \"IpAddress\",\n    modelProperties: {\n      ports: {\n        required: true,\n        serializedName: \"ports\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Port\"\n            }\n          }\n        }\n      },\n      type: {\n        required: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ip: {\n        serializedName: \"ip\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsNameLabel: {\n        serializedName: \"dnsNameLabel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fqdn: {\n        readOnly: true,\n        serializedName: \"fqdn\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGroupPropertiesInstanceView: msRest.CompositeMapper = {\n  serializedName: \"ContainerGroup_properties_instanceView\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGroupPropertiesInstanceView\",\n    modelProperties: {\n      events: {\n        readOnly: true,\n        serializedName: \"events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\"\n            }\n          }\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalytics: msRest.CompositeMapper = {\n  serializedName: \"LogAnalytics\",\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalytics\",\n    modelProperties: {\n      workspaceId: {\n        required: true,\n        serializedName: \"workspaceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceKey: {\n        required: true,\n        serializedName: \"workspaceKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logType: {\n        serializedName: \"logType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      workspaceResourceId: {\n        serializedName: \"workspaceResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGroupDiagnostics: msRest.CompositeMapper = {\n  serializedName: \"ContainerGroupDiagnostics\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGroupDiagnostics\",\n    modelProperties: {\n      logAnalytics: {\n        serializedName: \"logAnalytics\",\n        type: {\n          name: \"Composite\",\n          className: \"LogAnalytics\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGroupSubnetId: msRest.CompositeMapper = {\n  serializedName: \"ContainerGroupSubnetId\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGroupSubnetId\",\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DnsConfiguration: msRest.CompositeMapper = {\n  serializedName: \"DnsConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"DnsConfiguration\",\n    modelProperties: {\n      nameServers: {\n        required: true,\n        serializedName: \"nameServers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      searchDomains: {\n        serializedName: \"searchDomains\",\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionProperties: msRest.CompositeMapper = {\n  serializedName: \"EncryptionProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionProperties\",\n    modelProperties: {\n      vaultBaseUrl: {\n        required: true,\n        serializedName: \"vaultBaseUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyName: {\n        required: true,\n        serializedName: \"keyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVersion: {\n        required: true,\n        serializedName: \"keyVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InitContainerPropertiesDefinitionInstanceView: msRest.CompositeMapper = {\n  serializedName: \"InitContainerPropertiesDefinition_instanceView\",\n  type: {\n    name: \"Composite\",\n    className: \"InitContainerPropertiesDefinitionInstanceView\",\n    modelProperties: {\n      restartCount: {\n        readOnly: true,\n        serializedName: \"restartCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currentState: {\n        readOnly: true,\n        serializedName: \"currentState\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerState\"\n        }\n      },\n      previousState: {\n        readOnly: true,\n        serializedName: \"previousState\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerState\"\n        }\n      },\n      events: {\n        readOnly: true,\n        serializedName: \"events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InitContainerDefinition: msRest.CompositeMapper = {\n  serializedName: \"InitContainerDefinition\",\n  type: {\n    name: \"Composite\",\n    className: \"InitContainerDefinition\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        serializedName: \"properties.image\",\n        type: {\n          name: \"String\"\n        }\n      },\n      command: {\n        serializedName: \"properties.command\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      environmentVariables: {\n        serializedName: \"properties.environmentVariables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnvironmentVariable\"\n            }\n          }\n        }\n      },\n      instanceView: {\n        readOnly: true,\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"InitContainerPropertiesDefinitionInstanceView\"\n        }\n      },\n      volumeMounts: {\n        serializedName: \"properties.volumeMounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VolumeMount\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGroup: msRest.CompositeMapper = {\n  serializedName: \"ContainerGroup\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGroup\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerGroupIdentity\"\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containers: {\n        required: true,\n        serializedName: \"properties.containers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Container\"\n            }\n          }\n        }\n      },\n      imageRegistryCredentials: {\n        serializedName: \"properties.imageRegistryCredentials\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageRegistryCredential\"\n            }\n          }\n        }\n      },\n      restartPolicy: {\n        serializedName: \"properties.restartPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipAddress: {\n        serializedName: \"properties.ipAddress\",\n        type: {\n          name: \"Composite\",\n          className: \"IpAddress\"\n        }\n      },\n      osType: {\n        required: true,\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      volumes: {\n        serializedName: \"properties.volumes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Volume\"\n            }\n          }\n        }\n      },\n      instanceView: {\n        readOnly: true,\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerGroupPropertiesInstanceView\"\n        }\n      },\n      diagnostics: {\n        serializedName: \"properties.diagnostics\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerGroupDiagnostics\"\n        }\n      },\n      subnetIds: {\n        serializedName: \"properties.subnetIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerGroupSubnetId\"\n            }\n          }\n        }\n      },\n      dnsConfig: {\n        serializedName: \"properties.dnsConfig\",\n        type: {\n          name: \"Composite\",\n          className: \"DnsConfiguration\"\n        }\n      },\n      sku: {\n        serializedName: \"properties.sku\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionProperties: {\n        serializedName: \"properties.encryptionProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionProperties\"\n        }\n      },\n      initContainers: {\n        serializedName: \"properties.initContainers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InitContainerDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: msRest.CompositeMapper = {\n  serializedName: \"Operation_display\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        required: true,\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageName: msRest.CompositeMapper = {\n  serializedName: \"Usage_name\",\n  type: {\n    name: \"Composite\",\n    className: \"UsageName\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        readOnly: true,\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Usage: msRest.CompositeMapper = {\n  serializedName: \"Usage\",\n  type: {\n    name: \"Composite\",\n    className: \"Usage\",\n    modelProperties: {\n      unit: {\n        readOnly: true,\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        readOnly: true,\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        readOnly: true,\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"UsageName\"\n        }\n      }\n    }\n  }\n};\n\nexport const Logs: msRest.CompositeMapper = {\n  serializedName: \"Logs\",\n  type: {\n    name: \"Composite\",\n    className: \"Logs\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerExecRequestTerminalSize: msRest.CompositeMapper = {\n  serializedName: \"ContainerExecRequest_terminalSize\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerExecRequestTerminalSize\",\n    modelProperties: {\n      rows: {\n        serializedName: \"rows\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cols: {\n        serializedName: \"cols\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerExecRequest: msRest.CompositeMapper = {\n  serializedName: \"ContainerExecRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerExecRequest\",\n    modelProperties: {\n      command: {\n        serializedName: \"command\",\n        type: {\n          name: \"String\"\n        }\n      },\n      terminalSize: {\n        serializedName: \"terminalSize\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerExecRequestTerminalSize\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerExecResponse: msRest.CompositeMapper = {\n  serializedName: \"ContainerExecResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerExecResponse\",\n    modelProperties: {\n      webSocketUri: {\n        serializedName: \"webSocketUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAttachResponse: msRest.CompositeMapper = {\n  serializedName: \"ContainerAttachResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAttachResponse\",\n    modelProperties: {\n      webSocketUri: {\n        serializedName: \"webSocketUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CachedImages: msRest.CompositeMapper = {\n  serializedName: \"cachedImages\",\n  type: {\n    name: \"Composite\",\n    className: \"CachedImages\",\n    modelProperties: {\n      osType: {\n        required: true,\n        serializedName: \"osType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        required: true,\n        serializedName: \"image\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapabilitiesCapabilities: msRest.CompositeMapper = {\n  serializedName: \"Capabilities_capabilities\",\n  type: {\n    name: \"Composite\",\n    className: \"CapabilitiesCapabilities\",\n    modelProperties: {\n      maxMemoryInGB: {\n        readOnly: true,\n        serializedName: \"maxMemoryInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxCpu: {\n        readOnly: true,\n        serializedName: \"maxCpu\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxGpuCount: {\n        readOnly: true,\n        serializedName: \"maxGpuCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Capabilities: msRest.CompositeMapper = {\n  serializedName: \"Capabilities\",\n  type: {\n    name: \"Composite\",\n    className: \"Capabilities\",\n    modelProperties: {\n      resourceType: {\n        readOnly: true,\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osType: {\n        readOnly: true,\n        serializedName: \"osType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        readOnly: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipAddressType: {\n        readOnly: true,\n        serializedName: \"ipAddressType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gpu: {\n        readOnly: true,\n        serializedName: \"gpu\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capabilities: {\n        readOnly: true,\n        serializedName: \"capabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"CapabilitiesCapabilities\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGroupListResult: msRest.CompositeMapper = {\n  serializedName: \"ContainerGroupListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: msRest.CompositeMapper = {\n  serializedName: \"OperationListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageListResult: msRest.CompositeMapper = {\n  serializedName: \"UsageListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"UsageListResult\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Usage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CachedImagesListResult: msRest.CompositeMapper = {\n  serializedName: \"CachedImagesListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"CachedImagesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CachedImages\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapabilitiesListResult: msRest.CompositeMapper = {\n  serializedName: \"CapabilitiesListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"CapabilitiesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Capabilities\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AzureFileVolume,\n  BaseResource,\n  CloudError,\n  Container,\n  ContainerExec,\n  ContainerGroup,\n  ContainerGroupDiagnostics,\n  ContainerGroupIdentity,\n  ContainerGroupIdentityUserAssignedIdentitiesValue,\n  ContainerGroupListResult,\n  ContainerGroupPropertiesInstanceView,\n  ContainerGroupSubnetId,\n  ContainerHttpGet,\n  ContainerPort,\n  ContainerProbe,\n  ContainerPropertiesInstanceView,\n  ContainerState,\n  DnsConfiguration,\n  EncryptionProperties,\n  EnvironmentVariable,\n  Event,\n  GitRepoVolume,\n  GpuResource,\n  HttpHeader,\n  ImageRegistryCredential,\n  InitContainerDefinition,\n  InitContainerPropertiesDefinitionInstanceView,\n  IpAddress,\n  LogAnalytics,\n  Port,\n  Resource,\n  ResourceLimits,\n  ResourceRequests,\n  ResourceRequirements,\n  Volume,\n  VolumeMount\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const containerGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"containerGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"containerGroupName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const containerName: msRest.OperationURLParameter = {\n  parameterPath: \"containerName\",\n  mapper: {\n    required: true,\n    serializedName: \"containerName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const location: msRest.OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    required: true,\n    serializedName: \"location\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tail: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"tail\"\n  ],\n  mapper: {\n    serializedName: \"tail\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const timestamps: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timestamps\"\n  ],\n  mapper: {\n    serializedName: \"timestamps\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/containerGroupsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerInstanceManagementClientContext } from \"../containerInstanceManagementClientContext\";\n\n/** Class representing a ContainerGroups. */\nexport class ContainerGroups {\n  private readonly client: ContainerInstanceManagementClientContext;\n\n  /**\n   * Create a ContainerGroups.\n   * @param {ContainerInstanceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ContainerInstanceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get a list of container groups in the specified subscription. This operation returns properties\n   * of each container group including containers, image registry credentials, restart policy, IP\n   * address type, OS type, state, and volumes.\n   * @summary Get a list of container groups in the specified subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerGroupListResult>, callback?: msRest.ServiceCallback<Models.ContainerGroupListResult>): Promise<Models.ContainerGroupsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.ContainerGroupsListResponse>;\n  }\n\n  /**\n   * Get a list of container groups in a specified subscription and resource group. This operation\n   * returns properties of each container group including containers, image registry credentials,\n   * restart policy, IP address type, OS type, state, and volumes.\n   * @summary Get a list of container groups in the specified subscription and resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerGroupListResult>, callback?: msRest.ServiceCallback<Models.ContainerGroupListResult>): Promise<Models.ContainerGroupsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.ContainerGroupsListByResourceGroupResponse>;\n  }\n\n  /**\n   * Gets the properties of the specified container group in the specified subscription and resource\n   * group. The operation returns the properties of each container group including containers, image\n   * registry credentials, restart policy, IP address type, OS type, state, and volumes.\n   * @summary Get the properties of the specified container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsGetResponse>\n   */\n  get(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, containerGroupName: string, callback: msRest.ServiceCallback<Models.ContainerGroup>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, containerGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerGroup>): void;\n  get(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerGroup>, callback?: msRest.ServiceCallback<Models.ContainerGroup>): Promise<Models.ContainerGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ContainerGroupsGetResponse>;\n  }\n\n  /**\n   * Create or update container groups with specified configurations.\n   * @summary Create or update container groups.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerGroup The properties of the container group to be created or updated.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, containerGroupName: string, containerGroup: Models.ContainerGroup, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(resourceGroupName,containerGroupName,containerGroup,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ContainerGroupsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Updates container group tags with specified values.\n   * @summary Update container groups.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param resource The container group resource with just the tags to be updated.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsUpdateResponse>\n   */\n  update(resourceGroupName: string, containerGroupName: string, resource: Models.Resource, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param resource The container group resource with just the tags to be updated.\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, containerGroupName: string, resource: Models.Resource, callback: msRest.ServiceCallback<Models.ContainerGroup>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param resource The container group resource with just the tags to be updated.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, containerGroupName: string, resource: Models.Resource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerGroup>): void;\n  update(resourceGroupName: string, containerGroupName: string, resource: Models.Resource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerGroup>, callback?: msRest.ServiceCallback<Models.ContainerGroup>): Promise<Models.ContainerGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        resource,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.ContainerGroupsUpdateResponse>;\n  }\n\n  /**\n   * Delete the specified container group in the specified subscription and resource group. The\n   * operation does not delete other resources provided by the user, such as volumes.\n   * @summary Delete the specified container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsDeleteMethodResponse>\n   */\n  deleteMethod(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsDeleteMethodResponse> {\n    return this.beginDeleteMethod(resourceGroupName,containerGroupName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ContainerGroupsDeleteMethodResponse>;\n  }\n\n  /**\n   * Restarts all containers in a container group in place. If container image has updates, new image\n   * will be downloaded.\n   * @summary Restarts all containers in a container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  restart(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginRestart(resourceGroupName,containerGroupName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Stops all containers in a container group. Compute resources will be deallocated and billing\n   * will stop.\n   * @summary Stops all containers in a container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  stop(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param callback The callback\n   */\n  stop(resourceGroupName: string, containerGroupName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  stop(resourceGroupName: string, containerGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  stop(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        options\n      },\n      stopOperationSpec,\n      callback);\n  }\n\n  /**\n   * Starts all containers in a container group. Compute resources will be allocated and billing will\n   * start.\n   * @summary Starts all containers in a container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  start(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginStart(resourceGroupName,containerGroupName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Gets all the network dependencies for this container group to allow complete control of network\n   * setting and configuration. For container groups, this will always be an empty list.\n   * @summary Get all network dependencies for container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsGetOutboundNetworkDependenciesEndpointsResponse>\n   */\n  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsGetOutboundNetworkDependenciesEndpointsResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param callback The callback\n   */\n  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, containerGroupName: string, callback: msRest.ServiceCallback<string[]>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, containerGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<string[]>): void;\n  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<string[]>, callback?: msRest.ServiceCallback<string[]>): Promise<Models.ContainerGroupsGetOutboundNetworkDependenciesEndpointsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        options\n      },\n      getOutboundNetworkDependenciesEndpointsOperationSpec,\n      callback) as Promise<Models.ContainerGroupsGetOutboundNetworkDependenciesEndpointsResponse>;\n  }\n\n  /**\n   * Create or update container groups with specified configurations.\n   * @summary Create or update container groups.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerGroup The properties of the container group to be created or updated.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(resourceGroupName: string, containerGroupName: string, containerGroup: Models.ContainerGroup, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        containerGroup,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Delete the specified container group in the specified subscription and resource group. The\n   * operation does not delete other resources provided by the user, such as volumes.\n   * @summary Delete the specified container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * Restarts all containers in a container group in place. If container image has updates, new image\n   * will be downloaded.\n   * @summary Restarts all containers in a container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginRestart(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        options\n      },\n      beginRestartOperationSpec,\n      options);\n  }\n\n  /**\n   * Starts all containers in a container group. Compute resources will be allocated and billing will\n   * start.\n   * @summary Starts all containers in a container group.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginStart(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        options\n      },\n      beginStartOperationSpec,\n      options);\n  }\n\n  /**\n   * Get a list of container groups in the specified subscription. This operation returns properties\n   * of each container group including containers, image registry credentials, restart policy, IP\n   * address type, OS type, state, and volumes.\n   * @summary Get a list of container groups in the specified subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerGroupListResult>, callback?: msRest.ServiceCallback<Models.ContainerGroupListResult>): Promise<Models.ContainerGroupsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.ContainerGroupsListNextResponse>;\n  }\n\n  /**\n   * Get a list of container groups in a specified subscription and resource group. This operation\n   * returns properties of each container group including containers, image registry credentials,\n   * restart policy, IP address type, OS type, state, and volumes.\n   * @summary Get a list of container groups in the specified subscription and resource group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGroupsListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerGroupsListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerGroupListResult>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerGroupListResult>, callback?: msRest.ServiceCallback<Models.ContainerGroupListResult>): Promise<Models.ContainerGroupsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.ContainerGroupsListByResourceGroupNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"resource\",\n    mapper: {\n      ...Mappers.Resource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst stopOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/stop\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOutboundNetworkDependenciesEndpointsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/outboundNetworkDependenciesEndpoints\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"containerGroup\",\n    mapper: {\n      ...Mappers.ContainerGroup,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroup\n    },\n    201: {\n      bodyMapper: Mappers.ContainerGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroup\n    },\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginRestartOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/restart\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginStartOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/start\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  Operation,\n  OperationDisplay,\n  OperationListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerInstanceManagementClientContext } from \"../containerInstanceManagementClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: ContainerInstanceManagementClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {ContainerInstanceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ContainerInstanceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * List the operations for Azure Container Instance service.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n\n  /**\n   * List the operations for Azure Container Instance service.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.OperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.ContainerInstance/operations\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CachedImages,\n  CachedImagesListResult,\n  Capabilities,\n  CapabilitiesCapabilities,\n  CapabilitiesListResult,\n  CloudError,\n  Usage,\n  UsageListResult,\n  UsageName\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/locationMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerInstanceManagementClientContext } from \"../containerInstanceManagementClientContext\";\n\n/** Class representing a Location. */\nexport class Location {\n  private readonly client: ContainerInstanceManagementClientContext;\n\n  /**\n   * Create a Location.\n   * @param {ContainerInstanceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ContainerInstanceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get the usage for a subscription\n   * @param location The identifier for the physical azure location.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.LocationListUsageResponse>\n   */\n  listUsage(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListUsageResponse>;\n  /**\n   * @param location The identifier for the physical azure location.\n   * @param callback The callback\n   */\n  listUsage(location: string, callback: msRest.ServiceCallback<Models.UsageListResult>): void;\n  /**\n   * @param location The identifier for the physical azure location.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listUsage(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageListResult>): void;\n  listUsage(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsageListResult>, callback?: msRest.ServiceCallback<Models.UsageListResult>): Promise<Models.LocationListUsageResponse> {\n    return this.client.sendOperationRequest(\n      {\n        location,\n        options\n      },\n      listUsageOperationSpec,\n      callback) as Promise<Models.LocationListUsageResponse>;\n  }\n\n  /**\n   * Get the list of cached images on specific OS type for a subscription in a region.\n   * @summary Get the list of cached images.\n   * @param location The identifier for the physical azure location.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.LocationListCachedImagesResponse>\n   */\n  listCachedImages(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCachedImagesResponse>;\n  /**\n   * @param location The identifier for the physical azure location.\n   * @param callback The callback\n   */\n  listCachedImages(location: string, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;\n  /**\n   * @param location The identifier for the physical azure location.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listCachedImages(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;\n  listCachedImages(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CachedImagesListResult>, callback?: msRest.ServiceCallback<Models.CachedImagesListResult>): Promise<Models.LocationListCachedImagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        location,\n        options\n      },\n      listCachedImagesOperationSpec,\n      callback) as Promise<Models.LocationListCachedImagesResponse>;\n  }\n\n  /**\n   * Get the list of CPU/memory/GPU capabilities of a region.\n   * @summary Get the list of capabilities of the location.\n   * @param location The identifier for the physical azure location.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.LocationListCapabilitiesResponse>\n   */\n  listCapabilities(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCapabilitiesResponse>;\n  /**\n   * @param location The identifier for the physical azure location.\n   * @param callback The callback\n   */\n  listCapabilities(location: string, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;\n  /**\n   * @param location The identifier for the physical azure location.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listCapabilities(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;\n  listCapabilities(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CapabilitiesListResult>, callback?: msRest.ServiceCallback<Models.CapabilitiesListResult>): Promise<Models.LocationListCapabilitiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        location,\n        options\n      },\n      listCapabilitiesOperationSpec,\n      callback) as Promise<Models.LocationListCapabilitiesResponse>;\n  }\n\n  /**\n   * Get the list of cached images on specific OS type for a subscription in a region.\n   * @summary Get the list of cached images.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.LocationListCachedImagesNextResponse>\n   */\n  listCachedImagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCachedImagesNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listCachedImagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listCachedImagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CachedImagesListResult>): void;\n  listCachedImagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CachedImagesListResult>, callback?: msRest.ServiceCallback<Models.CachedImagesListResult>): Promise<Models.LocationListCachedImagesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listCachedImagesNextOperationSpec,\n      callback) as Promise<Models.LocationListCachedImagesNextResponse>;\n  }\n\n  /**\n   * Get the list of CPU/memory/GPU capabilities of a region.\n   * @summary Get the list of capabilities of the location.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.LocationListCapabilitiesNextResponse>\n   */\n  listCapabilitiesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationListCapabilitiesNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listCapabilitiesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listCapabilitiesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CapabilitiesListResult>): void;\n  listCapabilitiesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CapabilitiesListResult>, callback?: msRest.ServiceCallback<Models.CapabilitiesListResult>): Promise<Models.LocationListCapabilitiesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listCapabilitiesNextOperationSpec,\n      callback) as Promise<Models.LocationListCapabilitiesNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listUsageOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listCachedImagesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/cachedImages\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CachedImagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listCapabilitiesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/capabilities\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapabilitiesListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listCachedImagesNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CachedImagesListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listCapabilitiesNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapabilitiesListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  ContainerAttachResponse,\n  ContainerExecRequest,\n  ContainerExecRequestTerminalSize,\n  ContainerExecResponse,\n  Logs\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/containersMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerInstanceManagementClientContext } from \"../containerInstanceManagementClientContext\";\n\n/** Class representing a Containers. */\nexport class Containers {\n  private readonly client: ContainerInstanceManagementClientContext;\n\n  /**\n   * Create a Containers.\n   * @param {ContainerInstanceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ContainerInstanceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get the logs for a specified container instance in a specified resource group and container\n   * group.\n   * @summary Get the logs for a specified container instance.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainersListLogsResponse>\n   */\n  listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, options?: Models.ContainersListLogsOptionalParams): Promise<Models.ContainersListLogsResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param callback The callback\n   */\n  listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, callback: msRest.ServiceCallback<Models.Logs>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, options: Models.ContainersListLogsOptionalParams, callback: msRest.ServiceCallback<Models.Logs>): void;\n  listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, options?: Models.ContainersListLogsOptionalParams | msRest.ServiceCallback<Models.Logs>, callback?: msRest.ServiceCallback<Models.Logs>): Promise<Models.ContainersListLogsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        containerName,\n        options\n      },\n      listLogsOperationSpec,\n      callback) as Promise<Models.ContainersListLogsResponse>;\n  }\n\n  /**\n   * Executes a command for a specific container instance in a specified resource group and container\n   * group.\n   * @summary Executes a command in a specific container instance.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param containerExecRequest The request for the exec command.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainersExecuteCommandResponse>\n   */\n  executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: Models.ContainerExecRequest, options?: msRest.RequestOptionsBase): Promise<Models.ContainersExecuteCommandResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param containerExecRequest The request for the exec command.\n   * @param callback The callback\n   */\n  executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: Models.ContainerExecRequest, callback: msRest.ServiceCallback<Models.ContainerExecResponse>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param containerExecRequest The request for the exec command.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: Models.ContainerExecRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerExecResponse>): void;\n  executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: Models.ContainerExecRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerExecResponse>, callback?: msRest.ServiceCallback<Models.ContainerExecResponse>): Promise<Models.ContainersExecuteCommandResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        containerName,\n        containerExecRequest,\n        options\n      },\n      executeCommandOperationSpec,\n      callback) as Promise<Models.ContainersExecuteCommandResponse>;\n  }\n\n  /**\n   * Attach to the output stream of a specific container instance in a specified resource group and\n   * container group.\n   * @summary Attach to the output of a specific container instance.\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainersAttachResponse>\n   */\n  attach(resourceGroupName: string, containerGroupName: string, containerName: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainersAttachResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param callback The callback\n   */\n  attach(resourceGroupName: string, containerGroupName: string, containerName: string, callback: msRest.ServiceCallback<Models.ContainerAttachResponse>): void;\n  /**\n   * @param resourceGroupName The name of the resource group.\n   * @param containerGroupName The name of the container group.\n   * @param containerName The name of the container instance.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  attach(resourceGroupName: string, containerGroupName: string, containerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerAttachResponse>): void;\n  attach(resourceGroupName: string, containerGroupName: string, containerName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ContainerAttachResponse>, callback?: msRest.ServiceCallback<Models.ContainerAttachResponse>): Promise<Models.ContainersAttachResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerGroupName,\n        containerName,\n        options\n      },\n      attachOperationSpec,\n      callback) as Promise<Models.ContainersAttachResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listLogsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName,\n    Parameters.containerName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.tail,\n    Parameters.timestamps\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Logs\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst executeCommandOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/exec\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName,\n    Parameters.containerName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"containerExecRequest\",\n    mapper: {\n      ...Mappers.ContainerExecRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerExecResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst attachOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/attach\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerGroupName,\n    Parameters.containerName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerAttachResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\n\nconst packageName = \"@azure/arm-containerinstance\";\nconst packageVersion = \"7.1.0\";\n\nexport class ContainerInstanceManagementClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n  subscriptionId: string;\n  apiVersion?: string;\n\n  /**\n   * Initializes a new instance of the ContainerInstanceManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure\n   * subscription. The subscription ID forms part of the URI for every service call.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.ContainerInstanceManagementClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2021-09-01';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { ContainerInstanceManagementClientContext } from \"./containerInstanceManagementClientContext\";\n\n\nclass ContainerInstanceManagementClient extends ContainerInstanceManagementClientContext {\n  // Operation groups\n  containerGroups: operations.ContainerGroups;\n  operations: operations.Operations;\n  location: operations.Location;\n  containers: operations.Containers;\n\n  /**\n   * Initializes a new instance of the ContainerInstanceManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure\n   * subscription. The subscription ID forms part of the URI for every service call.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.ContainerInstanceManagementClientOptions) {\n    super(credentials, subscriptionId, options);\n    this.containerGroups = new operations.ContainerGroups(this);\n    this.operations = new operations.Operations(this);\n    this.location = new operations.Location(this);\n    this.containers = new operations.Containers(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  ContainerInstanceManagementClient,\n  ContainerInstanceManagementClientContext,\n  Models as ContainerInstanceManagementModels,\n  Mappers as ContainerInstanceManagementMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.subscriptionId","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.ContainerGroupListResult","Mappers.CloudError","Parameters.resourceGroupName","Parameters.containerGroupName","Mappers.ContainerGroup","Mappers.Resource","Parameters.nextPageLink","listOperationSpec","listNextOperationSpec","serializer","Mappers","Mappers.OperationListResult","Parameters.location","Mappers.UsageListResult","Mappers.CachedImagesListResult","Mappers.CapabilitiesListResult","Parameters.containerName","Parameters.tail","Parameters.timestamps","Mappers.Logs","Mappers.ContainerExecRequest","Mappers.ContainerExecResponse","Mappers.ContainerAttachResponse","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.ContainerGroups","operations.Operations","operations.Location","operations.Containers"],"mappings":";;;;;;;;;;;;;IAAA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AACF;IACO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AACD;IACO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C;;ICtCA;;;;;;OAMG;;;;;;ICNH;;;;;;;IAWO,IAAM,UAAU,GAAGA,4BAAgB,CAAC;AAC3C,IAAO,IAAM,YAAY,GAAGC,8BAAkB,CAAC;AAE/C,IAAO,IAAM,aAAa,GAA2B;QACnD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,eAAe;YAC1B,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,mBAAmB,GAA2B;QACzD,cAAc,EAAE,qBAAqB;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,qBAAqB;YAChC,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAA2B;QACpD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,gBAAgB;YAC3B,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;qBACjB;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;qBACjB;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,KAAK,GAA2B;QAC3C,cAAc,EAAE,OAAO;QACvB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,OAAO;YAClB,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,cAAc,EAAE;oBACd,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;qBACjB;iBACF;gBACD,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;qBACjB;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,+BAA+B,GAA2B;QACrE,cAAc,EAAE,kCAAkC;QAClD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iCAAiC;YAC5C,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;gBACD,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,OAAO;6BACnB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,WAAW,GAA2B;QACjD,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,aAAa;YACxB,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gBAAgB,GAA2B;QACtD,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kBAAkB;YAC7B,eAAe,EAAE;gBACf,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,aAAa;qBACzB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAA2B;QACpD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,gBAAgB;YAC3B,eAAe,EAAE;gBACf,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,aAAa;qBACzB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oBAAoB,GAA2B;QAC1D,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sBAAsB;YACjC,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,kBAAkB;qBAC9B;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,WAAW,GAA2B;QACjD,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,aAAa;YACxB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,aAAa,GAA2B;QACnD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,eAAe;YAC1B,eAAe,EAAE;gBACf,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,UAAU,GAA2B;QAChD,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,YAAY;YACvB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gBAAgB,GAA2B;QACtD,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kBAAkB;YAC7B,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,YAAY;6BACxB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAA2B;QACpD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,gBAAgB;YAC3B,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,eAAe;qBAC3B;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,kBAAkB;qBAC9B;iBACF;gBACD,mBAAmB,EAAE;oBACnB,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,gBAAgB,EAAE;oBAChB,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,gBAAgB,EAAE;oBAChB,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,cAAc,EAAE;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,SAAS,GAA2B;QAC/C,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,WAAW;YACtB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,eAAe;6BAC3B;yBACF;qBACF;iBACF;gBACD,oBAAoB,EAAE;oBACpB,cAAc,EAAE,iCAAiC;oBACjD,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,qBAAqB;6BACjC;yBACF;qBACF;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,yBAAyB;oBACzC,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,iCAAiC;qBAC7C;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,sBAAsB;oBACtC,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,sBAAsB;qBAClC;iBACF;gBACD,YAAY,EAAE;oBACZ,cAAc,EAAE,yBAAyB;oBACzC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,aAAa;6BACzB;yBACF;qBACF;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,0BAA0B;oBAC1C,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;gBACD,cAAc,EAAE;oBACd,cAAc,EAAE,2BAA2B;oBAC3C,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,kBAAkB,EAAE;oBAClB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,iBAAiB,EAAE;oBACjB,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,aAAa,GAA2B;QACnD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,eAAe;YAC1B,eAAe,EAAE;gBACf,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,MAAM,GAA2B;QAC5C,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,QAAQ;YACnB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,iBAAiB;qBAC7B;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,YAAY;wBAClB,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,eAAe;qBAC3B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,iDAAiD,GAA2B;QACvF,cAAc,EAAE,oDAAoD;QACpE,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,mDAAmD;YAC9D,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,MAAM;wBACZ,aAAa,EAAE;4BACb,gBAAgB;4BAChB,cAAc;4BACd,8BAA8B;4BAC9B,MAAM;yBACP;qBACF;iBACF;gBACD,sBAAsB,EAAE;oBACtB,cAAc,EAAE,wBAAwB;oBACxC,IAAI,EAAE;wBACJ,IAAI,EAAE,YAAY;wBAClB,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,mDAAmD;6BAC/D;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,uBAAuB,GAA2B;QAC7D,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,yBAAyB;YACpC,eAAe,EAAE;gBACf,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,IAAI,GAA2B;QAC1C,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,MAAM;YACjB,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,SAAS,GAA2B;QAC/C,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,WAAW;YACtB,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,MAAM;6BAClB;yBACF;qBACF;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,EAAE,EAAE;oBACF,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oCAAoC,GAA2B;QAC1E,cAAc,EAAE,wCAAwC;QACxD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sCAAsC;YACjD,eAAe,EAAE;gBACf,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,OAAO;6BACnB;yBACF;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,cAAc;YACzB,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,YAAY;wBAClB,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,mBAAmB,EAAE;oBACnB,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,yBAAyB,GAA2B;QAC/D,cAAc,EAAE,2BAA2B;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,2BAA2B;YACtC,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,cAAc;qBAC1B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gBAAgB,GAA2B;QACtD,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kBAAkB;YAC7B,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oBAAoB,GAA2B;QAC1D,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sBAAsB;YACjC,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,6CAA6C,GAA2B;QACnF,cAAc,EAAE,gDAAgD;QAChE,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,+CAA+C;YAC1D,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;gBACD,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,gBAAgB;qBAC5B;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,OAAO;6BACnB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,uBAAuB,GAA2B;QAC7D,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,yBAAyB;YACpC,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,oBAAoB,EAAE;oBACpB,cAAc,EAAE,iCAAiC;oBACjD,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,qBAAqB;6BACjC;yBACF;qBACF;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,yBAAyB;oBACzC,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,+CAA+C;qBAC3D;iBACF;gBACD,YAAY,EAAE;oBACZ,cAAc,EAAE,yBAAyB;oBACzC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,aAAa;6BACzB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,QAAQ,GAA2B;QAC9C,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,UAAU;YACrB,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,YAAY;wBAClB,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAA2B;QACpD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,gBAAgB;YAC3B,eAAe,wBACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,wBAAwB;qBACpC;iBACF,EACD,iBAAiB,EAAE;oBACjB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,8BAA8B;oBAC9C,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF,EACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,uBAAuB;oBACvC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,WAAW;6BACvB;yBACF;qBACF;iBACF,EACD,wBAAwB,EAAE;oBACxB,cAAc,EAAE,qCAAqC;oBACrD,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,yBAAyB;6BACrC;yBACF;qBACF;iBACF,EACD,aAAa,EAAE;oBACb,cAAc,EAAE,0BAA0B;oBAC1C,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF,EACD,SAAS,EAAE;oBACT,cAAc,EAAE,sBAAsB;oBACtC,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,WAAW;qBACvB;iBACF,EACD,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF,EACD,OAAO,EAAE;oBACP,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,QAAQ;6BACpB;yBACF;qBACF;iBACF,EACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,yBAAyB;oBACzC,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,sCAAsC;qBAClD;iBACF,EACD,WAAW,EAAE;oBACX,cAAc,EAAE,wBAAwB;oBACxC,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,2BAA2B;qBACvC;iBACF,EACD,SAAS,EAAE;oBACT,cAAc,EAAE,sBAAsB;oBACtC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,wBAAwB;6BACpC;yBACF;qBACF;iBACF,EACD,SAAS,EAAE;oBACT,cAAc,EAAE,sBAAsB;oBACtC,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,kBAAkB;qBAC9B;iBACF,EACD,GAAG,EAAE;oBACH,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF,EACD,oBAAoB,EAAE;oBACpB,cAAc,EAAE,iCAAiC;oBACjD,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,sBAAsB;qBAClC;iBACF,EACD,cAAc,EAAE;oBACd,cAAc,EAAE,2BAA2B;oBAC3C,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,yBAAyB;6BACrC;yBACF;qBACF;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gBAAgB,GAA2B;QACtD,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kBAAkB;YAC7B,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,SAAS,GAA2B;QAC/C,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,WAAW;YACtB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,kBAAkB;qBAC9B;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,SAAS,GAA2B;QAC/C,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,WAAW;YACtB,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,cAAc,EAAE;oBACd,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,KAAK,GAA2B;QAC3C,cAAc,EAAE,OAAO;QACvB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,OAAO;YAClB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,WAAW;qBACvB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,IAAI,GAA2B;QAC1C,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,MAAM;YACjB,eAAe,EAAE;gBACf,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gCAAgC,GAA2B;QACtE,cAAc,EAAE,mCAAmC;QACnD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kCAAkC;YAC7C,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oBAAoB,GAA2B;QAC1D,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sBAAsB;YACjC,eAAe,EAAE;gBACf,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,kCAAkC;qBAC9C;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,qBAAqB,GAA2B;QAC3D,cAAc,EAAE,uBAAuB;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,uBAAuB;YAClC,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,uBAAuB,GAA2B;QAC7D,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,yBAAyB;YACpC,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,cAAc;YACzB,eAAe,EAAE;gBACf,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,wBAAwB,GAA2B;QAC9D,cAAc,EAAE,2BAA2B;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,0BAA0B;YACrC,eAAe,EAAE;gBACf,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,cAAc;YACzB,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,0BAA0B;qBACtC;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,wBAAwB,GAA2B;QAC9D,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,0BAA0B;YACrC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,gBAAgB;6BAC5B;yBACF;qBACF;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,mBAAmB,GAA2B;QACzD,cAAc,EAAE,qBAAqB;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,qBAAqB;YAChC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,WAAW;6BACvB;yBACF;qBACF;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,OAAO;6BACnB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,cAAc;6BAC1B;yBACF;qBACF;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,cAAc;6BAC1B;yBACF;qBACF;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICp0DF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;AAWA,IAAO,IAAM,cAAc,GAA8B;QACvD,aAAa,EAAE,gBAAgB;QAC/B,MAAM,EAAE;YACN,cAAc,EAAE,iBAAiB;YACjC,YAAY,EAAE,OAAO;YACrB,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,UAAU,GAAmC;QACxD,aAAa,EAAE,YAAY;QAC3B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,aAAa;YAC7B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,kBAAkB,GAAiC;QAC9D,aAAa,EAAE,oBAAoB;QACnC,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,oBAAoB;YACpC,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,aAAa,GAAiC;QACzD,aAAa,EAAE,eAAe;QAC9B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,eAAe;YAC/B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,QAAQ,GAAiC;QACpD,aAAa,EAAE,UAAU;QACzB,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,UAAU;YAC1B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,cAAc;QAC7B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,UAAU;YAC1B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;QACD,YAAY,EAAE,IAAI;KACnB,CAAC;AACF,IAAO,IAAM,iBAAiB,GAAiC;QAC7D,aAAa,EAAE,mBAAmB;QAClC,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,mBAAmB;YACnC,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,cAAc,GAAiC;QAC1D,aAAa,EAAE,gBAAgB;QAC/B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,gBAAgB;YAChC,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,IAAI,GAAmC;QAClD,aAAa,EAAE;YACb,SAAS;YACT,MAAM;SACP;QACD,MAAM,EAAE;YACN,cAAc,EAAE,MAAM;YACtB,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,UAAU,GAAmC;QACxD,aAAa,EAAE;YACb,SAAS;YACT,YAAY;SACb;QACD,MAAM,EAAE;YACN,cAAc,EAAE,YAAY;YAC5B,IAAI,EAAE;gBACJ,IAAI,EAAE,SAAS;aAChB;SACF;KACF,CAAC;;ICnHF;;;;;;;;IAgBA;AACA;;;;;QAOE,yBAAY,MAAgD;YAC1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAoBD,8BAAI,GAAJ,UAAK,OAA6F,EAAE,QAAkE;YACpK,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACD,iBAAiB,EACjB,QAAQ,CAAgD,CAAC;SAC5D;QAuBD,6CAAmB,GAAnB,UAAoB,iBAAyB,EAAE,OAA6F,EAAE,QAAkE;YAC9M,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,OAAO,SAAA;aACR,EACD,gCAAgC,EAChC,QAAQ,CAA+D,CAAC;SAC3E;QA0BD,6BAAG,GAAH,UAAI,iBAAyB,EAAE,kBAA0B,EAAE,OAAmF,EAAE,QAAwD;YACtM,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,OAAO,SAAA;aACR,EACD,gBAAgB,EAChB,QAAQ,CAA+C,CAAC;SAC3D;;;;;;;;;;QAWD,wCAAc,GAAd,UAAe,iBAAyB,EAAE,kBAA0B,EAAE,cAAqC,EAAE,OAAmC;YAC9I,OAAO,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAC,kBAAkB,EAAC,cAAc,EAAC,OAAO,CAAC;iBACzF,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,iBAAiB,EAAE,GAAA,CAA0D,CAAC;SAC9G;QA2BD,gCAAM,GAAN,UAAO,iBAAyB,EAAE,kBAA0B,EAAE,QAAyB,EAAE,OAAmF,EAAE,QAAwD;YACpO,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,QAAQ,UAAA;gBACR,OAAO,SAAA;aACR,EACD,mBAAmB,EACnB,QAAQ,CAAkD,CAAC;SAC9D;;;;;;;;;;QAWD,sCAAY,GAAZ,UAAa,iBAAyB,EAAE,kBAA0B,EAAE,OAAmC;YACrG,OAAO,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAC,kBAAkB,EAAC,OAAO,CAAC;iBACxE,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,iBAAiB,EAAE,GAAA,CAAwD,CAAC;SAC5G;;;;;;;;;;QAWD,iCAAO,GAAP,UAAQ,iBAAyB,EAAE,kBAA0B,EAAE,OAAmC;YAChG,OAAO,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAC,kBAAkB,EAAC,OAAO,CAAC;iBACnE,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,iBAAiB,EAAE,GAAA,CAAC,CAAC;SACrD;QAyBD,8BAAI,GAAJ,UAAK,iBAAyB,EAAE,kBAA0B,EAAE,OAAkE,EAAE,QAAuC;YACrK,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,OAAO,SAAA;aACR,EACD,iBAAiB,EACjB,QAAQ,CAAC,CAAC;SACb;;;;;;;;;;QAWD,+BAAK,GAAL,UAAM,iBAAyB,EAAE,kBAA0B,EAAE,OAAmC;YAC9F,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAC,kBAAkB,EAAC,OAAO,CAAC;iBACjE,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,iBAAiB,EAAE,GAAA,CAAC,CAAC;SACrD;QAyBD,iEAAuC,GAAvC,UAAwC,iBAAyB,EAAE,kBAA0B,EAAE,OAAsE,EAAE,QAA2C;YAChN,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,OAAO,SAAA;aACR,EACD,oDAAoD,EACpD,QAAQ,CAAmF,CAAC;SAC/F;;;;;;;;;;QAWD,6CAAmB,GAAnB,UAAoB,iBAAyB,EAAE,kBAA0B,EAAE,cAAqC,EAAE,OAAmC;YACnJ,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAC/B;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,cAAc,gBAAA;gBACd,OAAO,SAAA;aACR,EACD,gCAAgC,EAChC,OAAO,CAAC,CAAC;SACZ;;;;;;;;;;QAWD,2CAAiB,GAAjB,UAAkB,iBAAyB,EAAE,kBAA0B,EAAE,OAAmC;YAC1G,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAC/B;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,OAAO,SAAA;aACR,EACD,8BAA8B,EAC9B,OAAO,CAAC,CAAC;SACZ;;;;;;;;;;QAWD,sCAAY,GAAZ,UAAa,iBAAyB,EAAE,kBAA0B,EAAE,OAAmC;YACrG,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAC/B;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,OAAO,SAAA;aACR,EACD,yBAAyB,EACzB,OAAO,CAAC,CAAC;SACZ;;;;;;;;;;QAWD,oCAAU,GAAV,UAAW,iBAAyB,EAAE,kBAA0B,EAAE,OAAmC;YACnG,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAC/B;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,OAAO,SAAA;aACR,EACD,uBAAuB,EACvB,OAAO,CAAC,CAAC;SACZ;QAuBD,kCAAQ,GAAR,UAAS,YAAoB,EAAE,OAA6F,EAAE,QAAkE;YAC9L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,qBAAqB,EACrB,QAAQ,CAAoD,CAAC;SAChE;QAuBD,iDAAuB,GAAvB,UAAwB,YAAoB,EAAE,OAA6F,EAAE,QAAkE;YAC7M,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,oCAAoC,EACpC,QAAQ,CAAmE,CAAC;SAC/E;QACH,sBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAM,UAAU,GAAG,IAAIC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClD,IAAM,iBAAiB,GAAyB;QAC9C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,sFAAsF;QAC5F,aAAa,EAAE;YACbC,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,wBAAgC;aAC7C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,gCAAgC,GAAyB;QAC7D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,yHAAyH;QAC/H,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;SAC7B;QACD,eAAe,EAAE;YACfJ,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,wBAAgC;aAC7C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,gBAAgB,GAAyB;QAC7C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,8IAA8I;QACpJ,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEK,cAAsB;aACnC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEH,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,mBAAmB,GAAyB;QAChD,UAAU,EAAE,OAAO;QACnB,IAAI,EAAE,8IAA8I;QACpJ,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,UAAU;YACzB,MAAM,wBACDM,QAAgB,KACnB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAED,cAAsB;aACnC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEH,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,iBAAiB,GAAyB;QAC9C,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,mJAAmJ;QACzJ,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,oDAAoD,GAAyB;QACjF,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,mLAAmL;QACzL,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAE;oBACV,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAEE,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,gCAAgC,GAAyB;QAC7D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,8IAA8I;QACpJ,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,gBAAgB;YAC/B,MAAM,wBACDK,cAAsB,KACzB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,cAAsB;aACnC;YACD,GAAG,EAAE;gBACH,UAAU,EAAEA,cAAsB;aACnC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEH,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,8BAA8B,GAAyB;QAC3D,UAAU,EAAE,QAAQ;QACpB,IAAI,EAAE,8IAA8I;QACpJ,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEK,cAAsB;aACnC;YACD,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEH,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,yBAAyB,GAAyB;QACtD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,sJAAsJ;QAC5J,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,uBAAuB,GAAyB;QACpD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,oJAAoJ;QAC1J,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;SAC9B;QACD,eAAe,EAAE;YACfL,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,qBAAqB,GAAyB;QAClD,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbK,YAAuB;SACxB;QACD,eAAe,EAAE;YACfR,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,wBAAgC;aAC7C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,oCAAoC,GAAyB;QACjE,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbK,YAAuB;SACxB;QACD,eAAe,EAAE;YACfR,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,wBAAgC;aAC7C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;;ICxuBF;;;;;;OAMG;;;;;;;;;;ICNH;;;;;;;;AASA,IAMA;AACA;;;;;QAOE,oBAAY,MAAgD;YAC1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAiBD,yBAAI,GAAJ,UAAK,OAAwF,EAAE,QAA6D;YAC1J,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACDM,mBAAiB,EACjB,QAAQ,CAA2C,CAAC;SACvD;QAoBD,6BAAQ,GAAR,UAAS,YAAoB,EAAE,OAAwF,EAAE,QAA6D;YACpL,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACDC,uBAAqB,EACrB,QAAQ,CAA+C,CAAC;SAC3D;QACH,iBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMC,YAAU,GAAG,IAAIb,iBAAiB,CAACc,SAAO,CAAC,CAAC;IAClD,IAAMH,mBAAiB,GAAyB;QAC9C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,kDAAkD;QACxD,eAAe,EAAE;YACfT,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEY,mBAA2B;aACxC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEV,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMO,uBAAqB,GAAyB;QAClD,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbF,YAAuB;SACxB;QACD,eAAe,EAAE;YACfR,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEY,mBAA2B;aACxC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEV,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;IC5HF;;;;;;OAMG;;;;;;;;;;;;;;;ICNH;;;;;;;;AASA,IAMA;AACA;;;;;QAOE,kBAAY,MAAgD;YAC1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAoBD,4BAAS,GAAT,UAAU,QAAgB,EAAE,OAAoF,EAAE,QAAyD;YACzK,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,QAAQ,UAAA;gBACR,OAAO,SAAA;aACR,EACD,sBAAsB,EACtB,QAAQ,CAA8C,CAAC;SAC1D;QAqBD,mCAAgB,GAAhB,UAAiB,QAAgB,EAAE,OAA2F,EAAE,QAAgE;YAC9L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,QAAQ,UAAA;gBACR,OAAO,SAAA;aACR,EACD,6BAA6B,EAC7B,QAAQ,CAAqD,CAAC;SACjE;QAqBD,mCAAgB,GAAhB,UAAiB,QAAgB,EAAE,OAA2F,EAAE,QAAgE;YAC9L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,QAAQ,UAAA;gBACR,OAAO,SAAA;aACR,EACD,6BAA6B,EAC7B,QAAQ,CAAqD,CAAC;SACjE;QAqBD,uCAAoB,GAApB,UAAqB,YAAoB,EAAE,OAA2F,EAAE,QAAgE;YACtM,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,iCAAiC,EACjC,QAAQ,CAAyD,CAAC;SACrE;QAqBD,uCAAoB,GAApB,UAAqB,YAAoB,EAAE,OAA2F,EAAE,QAAgE;YACtM,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,iCAAiC,EACjC,QAAQ,CAAyD,CAAC;SACrE;QACH,eAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMQ,YAAU,GAAG,IAAIb,iBAAiB,CAACc,SAAO,CAAC,CAAC;IAClD,IAAM,sBAAsB,GAAyB;QACnD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,kGAAkG;QACxG,aAAa,EAAE;YACbb,cAAyB;YACzBe,QAAmB;SACpB;QACD,eAAe,EAAE;YACfd,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEc,eAAuB;aACpC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEZ,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,6BAA6B,GAAyB;QAC1D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,wGAAwG;QAC9G,aAAa,EAAE;YACbJ,cAAyB;YACzBe,QAAmB;SACpB;QACD,eAAe,EAAE;YACfd,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEe,sBAA8B;aAC3C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEb,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,6BAA6B,GAAyB;QAC1D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,wGAAwG;QAC9G,aAAa,EAAE;YACbJ,cAAyB;YACzBe,QAAmB;SACpB;QACD,eAAe,EAAE;YACfd,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEgB,sBAA8B;aAC3C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEd,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,iCAAiC,GAAyB;QAC9D,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbK,YAAuB;SACxB;QACD,eAAe,EAAE;YACfR,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEe,sBAA8B;aAC3C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEb,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,iCAAiC,GAAyB;QAC9D,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbK,YAAuB;SACxB;QACD,eAAe,EAAE;YACfR,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEgB,sBAA8B;aAC3C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEd,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;ICpSF;;;;;;OAMG;;;;;;;;;;;;ICNH;;;;;;;;IAeA;AACA;;;;;QAOE,oBAAY,MAAgD;YAC1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QA4BD,6BAAQ,GAAR,UAAS,iBAAyB,EAAE,kBAA0B,EAAE,aAAqB,EAAE,OAAuF,EAAE,QAA8C;YAC5N,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,aAAa,eAAA;gBACb,OAAO,SAAA;aACR,EACD,qBAAqB,EACrB,QAAQ,CAA+C,CAAC;SAC3D;QA+BD,mCAAc,GAAd,UAAe,iBAAyB,EAAE,kBAA0B,EAAE,aAAqB,EAAE,oBAAiD,EAAE,OAA0F,EAAE,QAA+D;YACzS,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,aAAa,eAAA;gBACb,oBAAoB,sBAAA;gBACpB,OAAO,SAAA;aACR,EACD,2BAA2B,EAC3B,QAAQ,CAAqD,CAAC;SACjE;QA4BD,2BAAM,GAAN,UAAO,iBAAyB,EAAE,kBAA0B,EAAE,aAAqB,EAAE,OAA4F,EAAE,QAAiE;YAClP,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,kBAAkB,oBAAA;gBAClB,aAAa,eAAA;gBACb,OAAO,SAAA;aACR,EACD,mBAAmB,EACnB,QAAQ,CAA6C,CAAC;SACzD;QACH,iBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMQ,YAAU,GAAG,IAAIb,iBAAiB,CAACc,SAAO,CAAC,CAAC;IAClD,IAAM,qBAAqB,GAAyB;QAClD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,8KAA8K;QACpL,aAAa,EAAE;YACbb,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;YAC7Ba,aAAwB;SACzB;QACD,eAAe,EAAE;YACflB,UAAqB;YACrBmB,IAAe;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBnB,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEoB,IAAY;aACzB;YACD,OAAO,EAAE;gBACP,UAAU,EAAElB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,2BAA2B,GAAyB;QACxD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,8KAA8K;QACpL,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;YAC7Ba,aAAwB;SACzB;QACD,eAAe,EAAE;YACflB,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,sBAAsB;YACrC,MAAM,wBACDqB,oBAA4B,KAC/B,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,qBAA6B;aAC1C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEpB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,mBAAmB,GAAyB;QAChD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,gLAAgL;QACtL,aAAa,EAAE;YACbJ,cAAyB;YACzBK,iBAA4B;YAC5BC,kBAA6B;YAC7Ba,aAAwB;SACzB;QACD,eAAe,EAAE;YACflB,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEuB,uBAA+B;aAC5C;YACD,OAAO,EAAE;gBACP,UAAU,EAAErB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;ICzOF;;;;;;;;IAcA,IAAM,WAAW,GAAG,8BAA8B,CAAC;IACnD,IAAM,cAAc,GAAG,OAAO,CAAC;AAE/B;QAA8D,4DAA8B;;;;;;;;;;;;;QAiB1F,kDAAY,WAA8D,EAAE,cAAsB,EAAE,OAAyD;YAA7J,iBAgCC;YA/BC,IAAI,WAAW,IAAI,SAAS,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACpD;YACD,IAAI,cAAc,IAAI,SAAS,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;aACvD;YAED,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,EAAE,CAAC;aACd;YACD,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtB,IAAM,gBAAgB,GAAGsB,oCAAoC,EAAE,CAAC;gBAChE,OAAO,CAAC,SAAS,GAAM,WAAW,SAAI,cAAc,SAAI,gBAAkB,CAAC;aAC5E;YAED,QAAA,kBAAM,WAAW,EAAE,OAAO,CAAC,SAAC;YAE5B,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC;YAC/B,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,KAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC;YAC3C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAI,CAAC,OAAO,IAAI,8BAA8B,CAAC;YACjF,KAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;YAC5D,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YAErC,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;gBAC3E,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;aAC9C;YACD,IAAI,OAAO,CAAC,gCAAgC,KAAK,IAAI,IAAI,OAAO,CAAC,gCAAgC,KAAK,SAAS,EAAE;gBAC/G,KAAI,CAAC,gCAAgC,GAAG,OAAO,CAAC,gCAAgC,CAAC;aAClF;;SACF;QACH,+CAAC;IAAD,CAAC,CAlD6DC,8BAA8B;;ICjB5F;;;;;;;;;QAiBgD,qDAAwC;;;;;;;;;;;;;QAmBtF,2CAAY,WAA8D,EAAE,cAAsB,EAAE,OAAyD;YAA7J,YACE,kBAAM,WAAW,EAAE,cAAc,EAAE,OAAO,CAAC,SAK5C;YAJC,KAAI,CAAC,eAAe,GAAG,IAAIC,eAA0B,CAAC,KAAI,CAAC,CAAC;YAC5D,KAAI,CAAC,UAAU,GAAG,IAAIC,UAAqB,CAAC,KAAI,CAAC,CAAC;YAClD,KAAI,CAAC,QAAQ,GAAG,IAAIC,QAAmB,CAAC,KAAI,CAAC,CAAC;YAC9C,KAAI,CAAC,UAAU,GAAG,IAAIC,UAAqB,CAAC,KAAI,CAAC,CAAC;;SACnD;QACH,wCAAC;IAAD,CA1BA,CAAgD,wCAAwC;;;;;;;;;;;;;;;;;;;"}